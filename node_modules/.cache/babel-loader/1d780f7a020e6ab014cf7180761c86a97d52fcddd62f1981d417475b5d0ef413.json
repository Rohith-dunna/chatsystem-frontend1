{"ast":null,"code":"var _jsxFileName = \"D:\\\\chatsystem\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport AuthForm from './components/AuthForm';\nimport Chat from './components/Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [username, setUsername] = useState('');\n  const [currentRoom, setCurrentRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const wsRef = useRef(null);\n\n  // WebSocket Connection\n  useEffect(() => {\n    if (token && !wsRef.current) {\n      wsRef.current = new WebSocket(`ws://localhost:8080?token=${token}`);\n      wsRef.current.onopen = () => console.log('WebSocket connected');\n      wsRef.current.onmessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'history') {\n          setMessages(data.messages);\n        } else if (data.type === 'message') {\n          setMessages(prev => [...prev, data]);\n        }\n      };\n      wsRef.current.onclose = () => {\n        console.log('WebSocket disconnected');\n        wsRef.current = null;\n      };\n    }\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n        wsRef.current = null;\n      }\n    };\n  }, [token]);\n\n  // Handle Login\n  const handleLogin = async credentials => {\n    try {\n      const res = await axios.post('http://localhost:8080/api/login', credentials);\n      setToken(res.data.token);\n      setUsername(credentials.username);\n      localStorage.setItem('token', res.data.token);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Server error');\n    }\n  };\n\n  // Handle Register\n  const handleRegister = async credentials => {\n    try {\n      const res = await axios.post('http://localhost:8080/api/register', credentials);\n      alert('Registration successful! Please login.');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Server error');\n    }\n  };\n\n  // Handle Logout\n  const handleLogout = () => {\n    setToken(null);\n    setUsername('');\n    setCurrentRoom(null);\n    setMessages([]);\n    localStorage.removeItem('token');\n  };\n\n  // Join Room\n  const joinRoom = roomId => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify({\n        type: 'join',\n        roomId\n      }));\n      setCurrentRoom(roomId);\n      setMessages([]);\n    }\n  };\n  return token ? /*#__PURE__*/_jsxDEV(Chat, {\n    username: username,\n    currentRoom: currentRoom,\n    messages: messages,\n    joinRoom: joinRoom,\n    sendMessage: text => {\n      var _wsRef$current;\n      return (_wsRef$current = wsRef.current) === null || _wsRef$current === void 0 ? void 0 : _wsRef$current.send(JSON.stringify({\n        type: 'message',\n        text\n      }));\n    },\n    logout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(AuthForm, {\n    onLogin: handleLogin,\n    onRegister: handleRegister\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i0EuF1L7a1U1ejT36Ndga0rF3eo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","AuthForm","Chat","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","username","setUsername","currentRoom","setCurrentRoom","messages","setMessages","wsRef","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","type","prev","onclose","close","handleLogin","credentials","res","post","setItem","error","_error$response","_error$response$data","alert","response","handleRegister","_error$response2","_error$response2$data","handleLogout","removeItem","joinRoom","roomId","readyState","OPEN","send","stringify","sendMessage","text","_wsRef$current","logout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onRegister","_c","$RefreshReg$"],"sources":["D:/chatsystem/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport AuthForm from './components/AuthForm';\nimport Chat from './components/Chat';\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [username, setUsername] = useState('');\n  const [currentRoom, setCurrentRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const wsRef = useRef(null);\n\n  // WebSocket Connection\n  useEffect(() => {\n    if (token && !wsRef.current) {\n      wsRef.current = new WebSocket(`ws://localhost:8080?token=${token}`);\n\n      wsRef.current.onopen = () => console.log('WebSocket connected');\n\n      wsRef.current.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'history') {\n          setMessages(data.messages);\n        } else if (data.type === 'message') {\n          setMessages(prev => [...prev, data]);\n        }\n      };\n\n      wsRef.current.onclose = () => {\n        console.log('WebSocket disconnected');\n        wsRef.current = null;\n      };\n    }\n\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n        wsRef.current = null;\n      }\n    };\n  }, [token]);\n\n  // Handle Login\n  const handleLogin = async (credentials) => {\n    try {\n      const res = await axios.post('http://localhost:8080/api/login', credentials);\n      setToken(res.data.token);\n      setUsername(credentials.username);\n      localStorage.setItem('token', res.data.token);\n    } catch (error) {\n      alert(error.response?.data?.error || 'Server error');\n    }\n  };\n\n  // Handle Register\n  const handleRegister = async (credentials) => {\n    try {\n      const res = await axios.post('http://localhost:8080/api/register', credentials);\n      alert('Registration successful! Please login.');\n    } catch (error) {\n      alert(error.response?.data?.error || 'Server error');\n    }\n  };\n\n  // Handle Logout\n  const handleLogout = () => {\n    setToken(null);\n    setUsername('');\n    setCurrentRoom(null);\n    setMessages([]);\n    localStorage.removeItem('token');\n  };\n\n  // Join Room\n  const joinRoom = (roomId) => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify({ type: 'join', roomId }));\n      setCurrentRoom(roomId);\n      setMessages([]);\n    }\n  };\n\n  return token ? (\n    <Chat\n      username={username}\n      currentRoom={currentRoom}\n      messages={messages}\n      joinRoom={joinRoom}\n      sendMessage={(text) => wsRef.current?.send(JSON.stringify({ type: 'message', text }))}\n      logout={handleLogout}\n    />\n  ) : (\n    <AuthForm onLogin={handleLogin} onRegister={handleRegister} />\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}